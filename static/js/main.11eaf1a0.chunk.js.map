{"version":3,"sources":["stitches.config.ts","Interactive.tsx","App.tsx","index.tsx"],"names":["styled","css","createStyled","prefix","tokens","colors","$pageBackground","$codeBlockBackground","$text","$textLowContrast","$red","$green","$blue","breakpoints","utils","darkThemeClass","theme","globalStyles","global","margin","border","padding","boxSizing","font","fontWeight","textDecoration","textAlign","color","background","html","height","body","fontFamily","webkitFontSmoothing","fontSize","textSizeAdjust","minHeight","backgroundColor","StyledDarkModeToggle","onClick","className","props","toString","as","hover","active","focusFromTab","style","outline","outlineOffset","touchActiveTapOnly","width","viewBox","fill","xmlns","d","fillRule","clipRule","display","outlineColor","StyledInteractiveLink","target","rel","borderBottom","AppDiv","maxWidth","H1","justifyContent","H2","CodeOuterBlock","borderRadius","CodeInnerBlock","CodeBlock","children","Code","Result","variants","bool","true","false","BooleanResult","App","darkMode","useDarkMode","undefined","classNameDark","toggle","href","deviceType","primaryInput","supportsPointerEvents","supportsTouchEvents","supportsPassiveEvents","window","matchMedia","matches","navigator","maxTouchPoints","screen","userAgent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11eaf1a0.chunk.js","sourcesContent":["import { createStyled } from '@stitches/react';\n\nexport const { styled, css } = createStyled({\n  prefix: '',\n  tokens: {\n    colors: {\n      $pageBackground: 'rgb(240,240,240)',\n      $codeBlockBackground: 'rgb(224,224,224)',\n      $text: 'rgb(0,0,0)',\n      $textLowContrast: 'rgb(128,128,128)',\n      $red: 'rgb(224,0,0)',\n      $green: 'rgb(0,168,0)',\n      $blue: 'rgb(0,0,224)',\n    },\n  },\n  breakpoints: {},\n  utils: {},\n});\n\nexport const darkThemeClass = css.theme({\n  colors: {\n    $pageBackground: 'rgb(32,32,32)',\n    $codeBlockBackground: 'rgb(56,56,56)',\n    $text: 'rgb(192,192,192)',\n    $textLowContrast: 'rgb(136,136,136)',\n    $red: 'rgb(216,0,0)',\n    $green: 'rgb(0,168,0)',\n    $blue: 'rgb(118,118,255)',\n  },\n});\n\nexport const globalStyles = css.global({\n  'body, div, span, a, p, h1, h2, code': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textDecoration: 'inherit',\n    textAlign: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n  },\n  html: {\n    height: '100%',\n  },\n  body: {\n    height: '100%',\n    color: '$text',\n    fontFamily:\n      '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n    webkitFontSmoothing: 'antialiased',\n    fontSize: '16px',\n    fontWeight: 300,\n    textSizeAdjust: 'none',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import React from 'react';\nimport Interactive from 'react-interactive';\nimport { styled } from './stitches.config';\n\ninterface DarkModeToggleProps {\n  onClick: () => void;\n  className?: any;\n}\nconst DarkModeToggle: React.VFC<DarkModeToggleProps> = ({\n  onClick,\n  className,\n  ...props\n}) => {\n  return (\n    <Interactive\n      {...props}\n      className={className.toString()}\n      onClick={onClick}\n      as=\"span\"\n      hover={{ className: 'hover' }}\n      active=\"hover\"\n      focusFromTab={{\n        className: 'focusFromTab',\n        style: {\n          outline: null,\n          outlineOffset: null,\n        },\n      }}\n      touchActiveTapOnly\n    >\n      {/* \n        SunIcon from https://icons.modulz.app/\n        can't npm install because of https://github.com/modulz/radix-icons/issues/39\n      */}\n      <svg\n        width=\"30\"\n        height=\"30\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z\"\n          fill=\"currentColor\"\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        ></path>\n      </svg>\n    </Interactive>\n  );\n};\n\nexport const StyledDarkModeToggle = styled(DarkModeToggle, {\n  color: '$text',\n  width: '30px',\n  height: '30px',\n  display: 'inline-block',\n\n  '&.hover': {\n    color: '$green',\n  },\n\n  '&.focusFromTab': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n});\n\ninterface InteractiveLinkProps {\n  children: React.ReactNode;\n  href: string;\n  className?: any;\n}\nconst InteractiveLink: React.VFC<InteractiveLinkProps> = (props) => {\n  return (\n    <Interactive\n      {...props}\n      className={props.className.toString()}\n      as=\"a\"\n      hover={{ className: 'hover' }}\n      active=\"hover\"\n      focusFromTab={{\n        className: 'focusFromTab',\n        style: {\n          outline: null,\n          outlineOffset: null,\n        },\n      }}\n      touchActiveTapOnly\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    />\n  );\n};\n\nexport const StyledInteractiveLink = styled(InteractiveLink, {\n  color: '$textLowContrast',\n  borderBottom: '1px dotted $green',\n  textDecoration: 'none',\n\n  '&.hover': {\n    color: '$text',\n    borderBottom: '1px solid $green',\n  },\n\n  '&.focusFromTab': {\n    // have separate outlineColor b/c tokens don't work in outline shorthand\n    // https://github.com/modulz/stitches/issues/103\n    outlineColor: '$green',\n    outline: '2px solid',\n    outlineOffset: '2px',\n  },\n});\n","import React from 'react';\nimport {\n  deviceType,\n  primaryInput,\n  supportsPointerEvents,\n  supportsTouchEvents,\n  supportsPassiveEvents,\n} from 'detect-it';\nimport useDarkMode from 'use-dark-mode';\nimport { styled, globalStyles, darkThemeClass } from './stitches.config';\nimport { StyledInteractiveLink, StyledDarkModeToggle } from './Interactive';\n\nconst AppDiv = styled('div', {\n  maxWidth: '400px',\n  padding: '14px 15px 25px',\n  margin: '0 auto',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\nconst H2 = styled('h2', {\n  margin: '36px 0 -6px',\n  fontSize: '22px',\n});\n\nconst CodeOuterBlock = styled('div', {\n  backgroundColor: '$codeBlockBackground',\n  padding: '1px 5px',\n  borderRadius: '3px',\n  margin: '16px 0',\n});\n\nconst CodeInnerBlock = styled('div', {\n  margin: '8px 11px 10px',\n});\n\nconst CodeBlock: React.FC = (props) => (\n  <CodeOuterBlock>\n    <CodeInnerBlock>{props.children}</CodeInnerBlock>\n  </CodeOuterBlock>\n);\n\nconst Code = styled('code', {\n  display: 'block',\n  margin: '5px 0',\n});\n\nconst Result = styled('span', {\n  color: '$blue',\n  variants: {\n    bool: {\n      true: {\n        color: '$green',\n      },\n      false: {\n        color: '$red',\n      },\n    },\n  },\n});\n\ninterface BooleanResultProps {\n  bool: boolean;\n}\nconst BooleanResult: React.FC<BooleanResultProps> = ({ bool }) => (\n  <Result bool={bool ? 'true' : 'false'}>{`${bool}`}</Result>\n);\n\nconst App = () => {\n  globalStyles();\n\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n  });\n  return (\n    <AppDiv>\n      <H1>\n        <span>Detect It &#8211; Live Detection</span>\n        <StyledDarkModeToggle onClick={darkMode.toggle} />\n      </H1>\n      <StyledInteractiveLink href=\"https://github.com/rafgraph/detect-it\">\n        https://github.com/rafgraph/detect-it\n      </StyledInteractiveLink>\n      <CodeBlock>\n        <Code>\n          deviceType: <Result>{deviceType}</Result>\n        </Code>\n        <Code>\n          primaryInput: <Result>{primaryInput}</Result>\n        </Code>\n        <Code>\n          supportsPointerEvents: <BooleanResult bool={supportsPointerEvents} />\n        </Code>\n        <Code>\n          supportsTouchEvents: <BooleanResult bool={supportsTouchEvents} />\n        </Code>\n        <Code>\n          supportsPassiveEvents: <BooleanResult bool={supportsPassiveEvents} />\n        </Code>\n      </CodeBlock>\n\n      <H2>Additional Device Info</H2>\n\n      <CodeBlock>\n        <Code>\n          primaryPointerFine:{' '}\n          <BooleanResult bool={window.matchMedia('(pointer: fine)').matches} />\n        </Code>\n        <Code>\n          anyPointerFine:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: fine)').matches}\n          />\n        </Code>\n        <Code>\n          primaryPointerCoarse:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(pointer: coarse)').matches}\n          />\n        </Code>\n        <Code>\n          anyPointerCoarse:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: coarse)').matches}\n          />\n        </Code>\n        {/* <Code>\n          primaryPointerNone:{' '}\n          <BooleanResult bool={window.matchMedia('(pointer: none)').matches} />\n        </Code>\n        <Code>\n          anyPointerNone:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-pointer: none)').matches}\n          />\n        </Code> */}\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          primaryHover:{' '}\n          <BooleanResult bool={window.matchMedia('(hover: hover)').matches} />\n        </Code>\n        <Code>\n          anyHover:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-hover: hover)').matches}\n          />\n        </Code>\n        <Code>\n          primaryHoverNone:{' '}\n          <BooleanResult bool={window.matchMedia('(hover: none)').matches} />\n        </Code>\n        <Code>\n          anyHoverNone:{' '}\n          <BooleanResult\n            bool={window.matchMedia('(any-hover: none)').matches}\n          />\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          pointerEventInWindow:{' '}\n          <BooleanResult bool={'PointerEvent' in window} />\n        </Code>\n        <Code>\n          maxTouchPoints:{' '}\n          <Result>{`${window.navigator.maxTouchPoints}`}</Result>\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          onTouchStartInWindow:{' '}\n          <BooleanResult bool={'ontouchstart' in window} />\n        </Code>\n        <Code>\n          touchEventInWindow: <BooleanResult bool={'TouchEvent' in window} />\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          screenSize:{' '}\n          <Result>{`${window.screen.width}x${window.screen.height}`}</Result>\n        </Code>\n      </CodeBlock>\n      <CodeBlock>\n        <Code>\n          userAgent: <Result>{window.navigator.userAgent}</Result>\n        </Code>\n      </CodeBlock>\n    </AppDiv>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}